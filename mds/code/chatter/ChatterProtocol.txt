
Protocol Specification
----------------------

Sending a message over Maxima to application "chatter"

The data packet is a HEX encoded JSON. Once you convert to String.. and JSON parse.. 

CHATTER MESSAGE
---------------
{
	"type:":MESSAGE_TYPE,
	"message":THE_MESSAGE,
	"messageid":HASH_OF_A_MESSAGE,
	"signature":HEX_SIGNATURE
}

MESSAGE_TYPE
------------
"MESSAGE" or "MESSAGE_REQUEST"

THE_MESSAGE
-----------
{
	"publickey":MAXIMA_PUBLICKEY,
	"username":USERNAME,
	"message":UTF8_STRING,
	"parentid":THE MSGID OF THE PARENT - 0x00 if no parent (First message),
	"baseid":THE MSGID OF THE TOP MESSAGE IN THIS THREAD - 0x00 if no parent (First message),
	"date":TIME MILLI,
	"randomid":A RANDOM NUMBER (So the hash is always different)
}

If the message type is MESSAGE_REQUEST only use
{
	"type:":"MESSAGE_REQUEST",
	"messageid":HASH_OF_A_MESSAGE,
}

A message can have 1 file added.

A MESSAGE_REQUEST expects a MESSAGE to be sent back to the user iof the MSGID if the user has it.

HASH_OF_MESSAGE
---------------
Convert the message JSON to string and hash that.

SIGNATURE
---------
Sign the MSGID - can use your default Maxima key or a made up one with maxcreate.

maxsign data:HASH

Must be the key used as publickey.

